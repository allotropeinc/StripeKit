// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths {
    public static var ephemeralKeys: EphemeralKeys {
        EphemeralKeys(path: "/v1/ephemeral_keys")
    }

    public struct EphemeralKeys {
        /// Path: `/v1/ephemeral_keys`
        public let path: String

        /// <p>Creates a short-lived API key for a given resource.</p>
        public func post(_ body: PostRequest? = nil) -> Request<StripeKit.EphemeralKey> {
            Request(method: "POST", url: path, body: body.map(URLQueryEncoder.encode)?.percentEncodedQuery, id: "PostEphemeralKeys")
        }

        public struct PostRequest: Encodable {
            /// The ID of the Customer you'd like to modify using the resulting ephemeral key.
            public var customer: String?
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// The ID of the Issuing Card you'd like to access using the resulting ephemeral key.
            public var issuingCard: String?

            public init(customer: String? = nil, expand: [String]? = nil, issuingCard: String? = nil) {
                self.customer = customer
                self.expand = expand
                self.issuingCard = issuingCard
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(customer, forKey: "customer")
                encoder.encode(expand, forKey: "expand")
                encoder.encode(issuingCard, forKey: "issuing_card")
                return encoder.items
            }
        }
    }
}
