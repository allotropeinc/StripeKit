// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Accounts.WithAccount {
    public var reject: Reject {
        Reject(path: path + "/reject")
    }

    public struct Reject {
        /// Path: `/v1/accounts/{account}/reject`
        public let path: String

        /// <p>With <a href="/docs/connect">Connect</a>, you may flag accounts as suspicious.</p>
        /// 
        /// <p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>
        public func post(_ body: PostRequest) -> Request<StripeKit.Account> {
            Request(method: "POST", url: path, body: URLQueryEncoder.encode(body).percentEncodedQuery, id: "PostAccountsAccountReject")
        }

        public struct PostRequest: Encodable {
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.
            public var reason: String

            public init(expand: [String]? = nil, reason: String) {
                self.expand = expand
                self.reason = reason
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(expand, forKey: "expand")
                encoder.encode(reason, forKey: "reason")
                return encoder.items
            }
        }
    }
}
