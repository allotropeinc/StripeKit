// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Terminal.Readers.WithReader {
    public var processSetupIntent: ProcessSetupIntent {
        ProcessSetupIntent(path: path + "/process_setup_intent")
    }

    public struct ProcessSetupIntent {
        /// Path: `/v1/terminal/readers/{reader}/process_setup_intent`
        public let path: String

        /// <p>Initiates a setup intent flow on a Reader.</p>
        public func post(_ body: PostRequest) -> Request<StripeKit.TerminalReader> {
            Request(method: "POST", url: path, body: URLQueryEncoder.encode(body).percentEncodedQuery, id: "PostTerminalReadersReaderProcessSetupIntent")
        }

        public struct PostRequest: Encodable {
            /// Customer Consent Collected
            public var isCustomerConsentCollected: Bool
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// SetupIntent ID
            public var setupIntent: String

            public init(isCustomerConsentCollected: Bool, expand: [String]? = nil, setupIntent: String) {
                self.isCustomerConsentCollected = isCustomerConsentCollected
                self.expand = expand
                self.setupIntent = setupIntent
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(isCustomerConsentCollected, forKey: "customer_consent_collected")
                encoder.encode(expand, forKey: "expand")
                encoder.encode(setupIntent, forKey: "setup_intent")
                return encoder.items
            }
        }
    }
}
