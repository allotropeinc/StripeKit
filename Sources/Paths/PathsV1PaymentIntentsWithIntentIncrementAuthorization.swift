// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.PaymentIntents.WithIntent {
    public var incrementAuthorization: IncrementAuthorization {
        IncrementAuthorization(path: path + "/increment_authorization")
    }

    public struct IncrementAuthorization {
        /// Path: `/v1/payment_intents/{intent}/increment_authorization`
        public let path: String

        /// <p>Perform an incremental authorization on an eligible
        /// <a href="/docs/api/payment_intents/object">PaymentIntent</a>. To be eligible, the
        /// PaymentIntent’s status must be <code>requires_capture</code> and
        /// <a href="/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported">incremental_authorization_supported</a>
        /// must be <code>true</code>.</p>
        /// 
        /// <p>Incremental authorizations attempt to increase the authorized amount on
        /// your customer’s card to the new, higher <code>amount</code> provided. As with the
        /// initial authorization, incremental authorizations may be declined. A
        /// single PaymentIntent can call this endpoint multiple times to further
        /// increase the authorized amount.</p>
        /// 
        /// <p>If the incremental authorization succeeds, the PaymentIntent object is
        /// returned with the updated
        /// <a href="/docs/api/payment_intents/object#payment_intent_object-amount">amount</a>.
        /// If the incremental authorization fails, a
        /// <a href="/docs/error-codes#card-declined">card_declined</a> error is returned, and no
        /// fields on the PaymentIntent or Charge are updated. The PaymentIntent
        /// object remains capturable for the previously authorized amount.</p>
        /// 
        /// <p>Each PaymentIntent can have a maximum of 10 incremental authorization attempts, including declines.
        /// Once captured, a PaymentIntent can no longer be incremented.</p>
        /// 
        /// <p>Learn more about <a href="/docs/terminal/features/incremental-authorizations">incremental authorizations</a>.</p>
        public func post(_ body: PostRequest) -> Request<StripeKit.PaymentIntent> {
            Request(method: "POST", url: path, body: URLQueryEncoder.encode(body).percentEncodedQuery, id: "PostPaymentIntentsIntentIncrementAuthorization")
        }

        public struct PostRequest: Encodable {
            /// The updated total amount you intend to collect from the cardholder. This amount must be greater than the currently authorized amount.
            public var amount: Int
            /// The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
            public var applicationFeeAmount: Int?
            /// An arbitrary string attached to the object. Often useful for displaying to users.
            public var description: String?
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
            public var metadata: [String: String]?
            /// Transfer_data_update_params
            ///
            /// The parameters used to automatically create a Transfer when the payment is captured.
            /// For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
            public var transferData: TransferData?

            /// Transfer_data_update_params
            ///
            /// The parameters used to automatically create a Transfer when the payment is captured.
            /// For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
            public struct TransferData: Encodable {
                public var amount: Int?

                public init(amount: Int? = nil) {
                    self.amount = amount
                }

                public var asQuery: [(String, String?)] {
                    let encoder = URLQueryEncoder()
                    encoder.encode(amount, forKey: "amount")
                    return encoder.items
                }
            }

            public init(amount: Int, applicationFeeAmount: Int? = nil, description: String? = nil, expand: [String]? = nil, metadata: [String: String]? = nil, transferData: TransferData? = nil) {
                self.amount = amount
                self.applicationFeeAmount = applicationFeeAmount
                self.description = description
                self.expand = expand
                self.metadata = metadata
                self.transferData = transferData
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(amount, forKey: "amount")
                encoder.encode(applicationFeeAmount, forKey: "application_fee_amount")
                encoder.encode(description, forKey: "description")
                encoder.encode(expand, forKey: "expand")
                encoder.encode(metadata, forKey: "metadata")
                encoder.encode(transferData, forKey: "transfer_data")
                return encoder.items
            }
        }
    }
}
