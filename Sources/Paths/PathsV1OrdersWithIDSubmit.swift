// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Orders.WithID {
    public var submit: Submit {
        Submit(path: path + "/submit")
    }

    public struct Submit {
        /// Path: `/v1/orders/{id}/submit`
        public let path: String

        /// <p>Submitting an Order transitions the status to <code>processing</code> and creates a PaymentIntent object so the order can be paid. If the Order has an <code>amount_total</code> of 0, no PaymentIntent object will be created. Once the order is submitted, its contents cannot be changed, unless the <a href="#reopen_order">reopen</a> method is called.</p>
        public func post(_ body: PostRequest) -> Request<StripeKit.Order> {
            Request(method: "POST", url: path, body: URLQueryEncoder.encode(body).percentEncodedQuery, id: "PostOrdersIdSubmit")
        }

        public struct PostRequest: Encodable {
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// `expected_total` should always be set to the order's `amount_total` field. If they don't match, submitting the order will fail. This helps detect race conditions where something else concurrently modifies the order.
            public var expectedTotal: Int

            public init(expand: [String]? = nil, expectedTotal: Int) {
                self.expand = expand
                self.expectedTotal = expectedTotal
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(expand, forKey: "expand")
                encoder.encode(expectedTotal, forKey: "expected_total")
                return encoder.items
            }
        }
    }
}
