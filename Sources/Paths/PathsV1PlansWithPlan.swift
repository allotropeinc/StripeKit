// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Plans {
    public func plan(_ plan: String) -> WithPlan {
        WithPlan(path: "\(path)/\(plan)")
    }

    public struct WithPlan {
        /// Path: `/v1/plans/{plan}`
        public let path: String

        /// <p>Retrieves the plan with the given ID.</p>
        public func get(expand: [String]? = nil) -> Request<StripeKit.Plan> {
            Request(method: "GET", url: path, query: makeGetQuery(expand), id: "GetPlansPlan")
        }

        private func makeGetQuery(_ expand: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(expand, forKey: "expand", isDeepObject: true)
            return encoder.items
        }

        /// <p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>
        public func post(_ body: PostRequest? = nil) -> Request<StripeKit.Plan> {
            Request(method: "POST", url: path, body: body.map(URLQueryEncoder.encode)?.percentEncodedQuery, id: "PostPlansPlan")
        }

        public struct PostRequest: Encodable {
            /// Whether the plan is currently available for new subscriptions.
            public var isActive: Bool?
            /// Specifies which fields in the response should be expanded.
            public var expand: [String]?
            /// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
            public var metadata: Metadata?
            /// A brief description of the plan, hidden from customers.
            public var nickname: String?
            /// The product the plan belongs to. This cannot be changed once it has been used in a subscription or subscription schedule.
            public var product: String?
            /// Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
            public var trialPeriodDays: Int?

            /// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
            public struct Metadata: Encodable {
                public var stringString: [String: String]?
                public var object: Object?

                public enum Object: String, Codable, CaseIterable {
                    case empty = ""
                }

                public init(stringString: [String: String]? = nil, object: Object? = nil) {
                    self.stringString = stringString
                    self.object = object
                }

                public var asQuery: [(String, String?)] {
                    let encoder = URLQueryEncoder()
                    encoder.encode(stringString, forKey: "stringString")
                    encoder.encode(object, forKey: "object")
                    return encoder.items
                }
            }

            public init(isActive: Bool? = nil, expand: [String]? = nil, metadata: Metadata? = nil, nickname: String? = nil, product: String? = nil, trialPeriodDays: Int? = nil) {
                self.isActive = isActive
                self.expand = expand
                self.metadata = metadata
                self.nickname = nickname
                self.product = product
                self.trialPeriodDays = trialPeriodDays
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(isActive, forKey: "active")
                encoder.encode(expand, forKey: "expand")
                encoder.encode(metadata, forKey: "metadata")
                encoder.encode(nickname, forKey: "nickname")
                encoder.encode(product, forKey: "product")
                encoder.encode(trialPeriodDays, forKey: "trial_period_days")
                return encoder.items
            }
        }

        /// <p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>
        public var delete: Request<StripeKit.DeletedPlan> {
            Request(method: "DELETE", url: path, id: "DeletePlansPlan")
        }
    }
}
