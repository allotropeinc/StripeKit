// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PaymentIntentNextActionPromptpayDisplayQrCode: Codable {
    /// The raw data string used to generate QR code, it should be used together with QR code library.
    public var data: String
    /// The URL to the hosted PromptPay instructions page, which allows customers to view the PromptPay QR code.
    public var hostedInstructionsURL: String
    /// The image_url_png string used to render QR code, can be used as <img src="…" />
    public var imageURLPng: String
    /// The image_url_svg string used to render QR code, can be used as <img src="…" />
    public var imageURLSvg: String

    public init(data: String, hostedInstructionsURL: String, imageURLPng: String, imageURLSvg: String) {
        self.data = data
        self.hostedInstructionsURL = hostedInstructionsURL
        self.imageURLPng = imageURLPng
        self.imageURLSvg = imageURLSvg
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.data = try values.decode(String.self, forKey: "data")
        self.hostedInstructionsURL = try values.decode(String.self, forKey: "hosted_instructions_url")
        self.imageURLPng = try values.decode(String.self, forKey: "image_url_png")
        self.imageURLSvg = try values.decode(String.self, forKey: "image_url_svg")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(data, forKey: "data")
        try values.encode(hostedInstructionsURL, forKey: "hosted_instructions_url")
        try values.encode(imageURLPng, forKey: "image_url_png")
        try values.encode(imageURLSvg, forKey: "image_url_svg")
    }
}
