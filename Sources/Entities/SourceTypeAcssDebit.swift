// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SourceTypeAcssDebit: Codable {
    public var bankAddressCity: String?
    public var bankAddressLine1: String?
    public var bankAddressLine2: String?
    public var bankAddressPostalCode: String?
    public var bankName: String?
    public var category: String?
    public var country: String?
    public var fingerprint: String?
    public var last4: String?
    public var routingNumber: String?

    public init(bankAddressCity: String? = nil, bankAddressLine1: String? = nil, bankAddressLine2: String? = nil, bankAddressPostalCode: String? = nil, bankName: String? = nil, category: String? = nil, country: String? = nil, fingerprint: String? = nil, last4: String? = nil, routingNumber: String? = nil) {
        self.bankAddressCity = bankAddressCity
        self.bankAddressLine1 = bankAddressLine1
        self.bankAddressLine2 = bankAddressLine2
        self.bankAddressPostalCode = bankAddressPostalCode
        self.bankName = bankName
        self.category = category
        self.country = country
        self.fingerprint = fingerprint
        self.last4 = last4
        self.routingNumber = routingNumber
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bankAddressCity = try values.decodeIfPresent(String.self, forKey: "bank_address_city")
        self.bankAddressLine1 = try values.decodeIfPresent(String.self, forKey: "bank_address_line_1")
        self.bankAddressLine2 = try values.decodeIfPresent(String.self, forKey: "bank_address_line_2")
        self.bankAddressPostalCode = try values.decodeIfPresent(String.self, forKey: "bank_address_postal_code")
        self.bankName = try values.decodeIfPresent(String.self, forKey: "bank_name")
        self.category = try values.decodeIfPresent(String.self, forKey: "category")
        self.country = try values.decodeIfPresent(String.self, forKey: "country")
        self.fingerprint = try values.decodeIfPresent(String.self, forKey: "fingerprint")
        self.last4 = try values.decodeIfPresent(String.self, forKey: "last4")
        self.routingNumber = try values.decodeIfPresent(String.self, forKey: "routing_number")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bankAddressCity, forKey: "bank_address_city")
        try values.encodeIfPresent(bankAddressLine1, forKey: "bank_address_line_1")
        try values.encodeIfPresent(bankAddressLine2, forKey: "bank_address_line_2")
        try values.encodeIfPresent(bankAddressPostalCode, forKey: "bank_address_postal_code")
        try values.encodeIfPresent(bankName, forKey: "bank_name")
        try values.encodeIfPresent(category, forKey: "category")
        try values.encodeIfPresent(country, forKey: "country")
        try values.encodeIfPresent(fingerprint, forKey: "fingerprint")
        try values.encodeIfPresent(last4, forKey: "last4")
        try values.encodeIfPresent(routingNumber, forKey: "routing_number")
    }
}
