// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SourceTypeSepaDebit: Codable {
    public var bankCode: String?
    public var branchCode: String?
    public var country: String?
    public var fingerprint: String?
    public var last4: String?
    public var mandateReference: String?
    public var mandateURL: String?

    public init(bankCode: String? = nil, branchCode: String? = nil, country: String? = nil, fingerprint: String? = nil, last4: String? = nil, mandateReference: String? = nil, mandateURL: String? = nil) {
        self.bankCode = bankCode
        self.branchCode = branchCode
        self.country = country
        self.fingerprint = fingerprint
        self.last4 = last4
        self.mandateReference = mandateReference
        self.mandateURL = mandateURL
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bankCode = try values.decodeIfPresent(String.self, forKey: "bank_code")
        self.branchCode = try values.decodeIfPresent(String.self, forKey: "branch_code")
        self.country = try values.decodeIfPresent(String.self, forKey: "country")
        self.fingerprint = try values.decodeIfPresent(String.self, forKey: "fingerprint")
        self.last4 = try values.decodeIfPresent(String.self, forKey: "last4")
        self.mandateReference = try values.decodeIfPresent(String.self, forKey: "mandate_reference")
        self.mandateURL = try values.decodeIfPresent(String.self, forKey: "mandate_url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bankCode, forKey: "bank_code")
        try values.encodeIfPresent(branchCode, forKey: "branch_code")
        try values.encodeIfPresent(country, forKey: "country")
        try values.encodeIfPresent(fingerprint, forKey: "fingerprint")
        try values.encodeIfPresent(last4, forKey: "last4")
        try values.encodeIfPresent(mandateReference, forKey: "mandate_reference")
        try values.encodeIfPresent(mandateURL, forKey: "mandate_url")
    }
}
