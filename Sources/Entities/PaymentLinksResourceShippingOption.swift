// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PaymentLinksResourceShippingOption: Codable {
    /// A non-negative integer in cents representing how much to charge.
    public var shippingAmount: Int
    /// The ID of the Shipping Rate to use for this shipping option.
    public var shippingRate: ShippingRate

    /// The ID of the Shipping Rate to use for this shipping option.
    public final class ShippingRate: Codable {
        public let string: String?
        /// Shipping rates describe the price of shipping presented to your customers and can be
        /// applied to [Checkout Sessions](https://stripe.com/docs/payments/checkout/shipping)
        /// and [Orders](https://stripe.com/docs/orders/shipping) to collect shipping costs.
        public let shippingRate: StripeKit.ShippingRate?

        public init(string: String? = nil, shippingRate: StripeKit.ShippingRate? = nil) {
            self.string = string
            self.shippingRate = shippingRate
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            self.string = try? container.decode(String.self)
            self.shippingRate = try? container.decode(StripeKit.ShippingRate.self)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            if let value = string { try container.encode(value) }
            if let value = shippingRate { try container.encode(value) }
        }
    }

    public init(shippingAmount: Int, shippingRate: ShippingRate) {
        self.shippingAmount = shippingAmount
        self.shippingRate = shippingRate
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.shippingAmount = try values.decode(Int.self, forKey: "shipping_amount")
        self.shippingRate = try values.decode(ShippingRate.self, forKey: "shipping_rate")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(shippingAmount, forKey: "shipping_amount")
        try values.encode(shippingRate, forKey: "shipping_rate")
    }
}
