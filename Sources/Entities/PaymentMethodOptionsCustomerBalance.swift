// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_options_customer_balance
public struct PaymentMethodOptionsCustomerBalance: Codable {
    /// Payment_method_options_customer_balance_bank_transfer
    public var bankTransfer: PaymentMethodOptionsCustomerBalanceBankTransfer?
    /// The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    public var fundingType: FundingType?
    /// Indicates that you intend to make future payments with this PaymentIntent's payment method.
    /// 
    /// Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    /// 
    /// When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    public var setupFutureUsage: SetupFutureUsage?

    /// The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    public enum FundingType: String, Codable, CaseIterable {
        case bankTransfer = "bank_transfer"
    }

    /// Indicates that you intend to make future payments with this PaymentIntent's payment method.
    /// 
    /// Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    /// 
    /// When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    public enum SetupFutureUsage: String, Codable, CaseIterable {
        case `none`
    }

    public init(bankTransfer: PaymentMethodOptionsCustomerBalanceBankTransfer? = nil, fundingType: FundingType? = nil, setupFutureUsage: SetupFutureUsage? = nil) {
        self.bankTransfer = bankTransfer
        self.fundingType = fundingType
        self.setupFutureUsage = setupFutureUsage
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bankTransfer = try values.decodeIfPresent(PaymentMethodOptionsCustomerBalanceBankTransfer.self, forKey: "bank_transfer")
        self.fundingType = try values.decodeIfPresent(FundingType.self, forKey: "funding_type")
        self.setupFutureUsage = try values.decodeIfPresent(SetupFutureUsage.self, forKey: "setup_future_usage")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bankTransfer, forKey: "bank_transfer")
        try values.encodeIfPresent(fundingType, forKey: "funding_type")
        try values.encodeIfPresent(setupFutureUsage, forKey: "setup_future_usage")
    }
}
