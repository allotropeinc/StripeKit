// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct EphemeralKey: Codable {
    /// Time at which the object was created. Measured in seconds since the Unix epoch.
    public var created: Int
    /// Time at which the key will expire. Measured in seconds since the Unix epoch.
    public var expires: Int
    /// Unique identifier for the object.
    public var id: String
    /// Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    public var isLivemode: Bool
    /// String representing the object's type. Objects of the same type share the same value.
    public var object: Object
    /// The key's secret. You can use this value to make authorized requests to the Stripe API.
    public var secret: String?

    /// String representing the object's type. Objects of the same type share the same value.
    public enum Object: String, Codable, CaseIterable {
        case ephemeralKey = "ephemeral_key"
    }

    public init(created: Int, expires: Int, id: String, isLivemode: Bool, object: Object, secret: String? = nil) {
        self.created = created
        self.expires = expires
        self.id = id
        self.isLivemode = isLivemode
        self.object = object
        self.secret = secret
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.created = try values.decode(Int.self, forKey: "created")
        self.expires = try values.decode(Int.self, forKey: "expires")
        self.id = try values.decode(String.self, forKey: "id")
        self.isLivemode = try values.decode(Bool.self, forKey: "livemode")
        self.object = try values.decode(Object.self, forKey: "object")
        self.secret = try values.decodeIfPresent(String.self, forKey: "secret")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(created, forKey: "created")
        try values.encode(expires, forKey: "expires")
        try values.encode(id, forKey: "id")
        try values.encode(isLivemode, forKey: "livemode")
        try values.encode(object, forKey: "object")
        try values.encodeIfPresent(secret, forKey: "secret")
    }
}
