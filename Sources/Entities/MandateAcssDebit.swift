// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Mandate_acss_debit
public struct MandateAcssDebit: Codable {
    /// List of Stripe products where this mandate can be selected automatically.
    public var defaultFor: [DefaultForItem]?
    /// Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    public var intervalDescription: String?
    /// Payment schedule for the mandate.
    public var paymentSchedule: PaymentSchedule
    /// Transaction type of the mandate.
    public var transactionType: TransactionType

    public enum DefaultForItem: String, Codable, CaseIterable {
        case invoice
        case subscription
    }

    /// Payment schedule for the mandate.
    public enum PaymentSchedule: String, Codable, CaseIterable {
        case combined
        case interval
        case sporadic
    }

    /// Transaction type of the mandate.
    public enum TransactionType: String, Codable, CaseIterable {
        case business
        case personal
    }

    public init(defaultFor: [DefaultForItem]? = nil, intervalDescription: String? = nil, paymentSchedule: PaymentSchedule, transactionType: TransactionType) {
        self.defaultFor = defaultFor
        self.intervalDescription = intervalDescription
        self.paymentSchedule = paymentSchedule
        self.transactionType = transactionType
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.defaultFor = try values.decodeIfPresent([DefaultForItem].self, forKey: "default_for")
        self.intervalDescription = try values.decodeIfPresent(String.self, forKey: "interval_description")
        self.paymentSchedule = try values.decode(PaymentSchedule.self, forKey: "payment_schedule")
        self.transactionType = try values.decode(TransactionType.self, forKey: "transaction_type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(defaultFor, forKey: "default_for")
        try values.encodeIfPresent(intervalDescription, forKey: "interval_description")
        try values.encode(paymentSchedule, forKey: "payment_schedule")
        try values.encode(transactionType, forKey: "transaction_type")
    }
}
