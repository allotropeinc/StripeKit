// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct Shipping: Codable {
    public var address: Address?
    /// The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    public var carrier: String?
    /// Recipient name.
    public var name: String?
    /// Recipient phone (including extension).
    public var phone: String?
    /// The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    public var trackingNumber: String?

    public init(address: Address? = nil, carrier: String? = nil, name: String? = nil, phone: String? = nil, trackingNumber: String? = nil) {
        self.address = address
        self.carrier = carrier
        self.name = name
        self.phone = phone
        self.trackingNumber = trackingNumber
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.address = try values.decodeIfPresent(Address.self, forKey: "address")
        self.carrier = try values.decodeIfPresent(String.self, forKey: "carrier")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.phone = try values.decodeIfPresent(String.self, forKey: "phone")
        self.trackingNumber = try values.decodeIfPresent(String.self, forKey: "tracking_number")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(address, forKey: "address")
        try values.encodeIfPresent(carrier, forKey: "carrier")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(phone, forKey: "phone")
        try values.encodeIfPresent(trackingNumber, forKey: "tracking_number")
    }
}
