// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct TerminalConfigurationConfigurationResourceTipping: Codable {
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var aud: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var cad: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var chf: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var czk: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var dkk: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var eur: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var gbp: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var hkd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var myr: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var nok: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var nzd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var sek: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var sgd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?
    /// TerminalConfigurationConfigurationResourceCurrencySpecificConfig
    public var usd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig?

    public init(aud: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, cad: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, chf: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, czk: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, dkk: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, eur: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, gbp: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, hkd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, myr: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, nok: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, nzd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, sek: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, sgd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil, usd: TerminalConfigurationConfigurationResourceCurrencySpecificConfig? = nil) {
        self.aud = aud
        self.cad = cad
        self.chf = chf
        self.czk = czk
        self.dkk = dkk
        self.eur = eur
        self.gbp = gbp
        self.hkd = hkd
        self.myr = myr
        self.nok = nok
        self.nzd = nzd
        self.sek = sek
        self.sgd = sgd
        self.usd = usd
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.aud = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "aud")
        self.cad = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "cad")
        self.chf = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "chf")
        self.czk = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "czk")
        self.dkk = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "dkk")
        self.eur = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "eur")
        self.gbp = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "gbp")
        self.hkd = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "hkd")
        self.myr = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "myr")
        self.nok = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "nok")
        self.nzd = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "nzd")
        self.sek = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "sek")
        self.sgd = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "sgd")
        self.usd = try values.decodeIfPresent(TerminalConfigurationConfigurationResourceCurrencySpecificConfig.self, forKey: "usd")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(aud, forKey: "aud")
        try values.encodeIfPresent(cad, forKey: "cad")
        try values.encodeIfPresent(chf, forKey: "chf")
        try values.encodeIfPresent(czk, forKey: "czk")
        try values.encodeIfPresent(dkk, forKey: "dkk")
        try values.encodeIfPresent(eur, forKey: "eur")
        try values.encodeIfPresent(gbp, forKey: "gbp")
        try values.encodeIfPresent(hkd, forKey: "hkd")
        try values.encodeIfPresent(myr, forKey: "myr")
        try values.encodeIfPresent(nok, forKey: "nok")
        try values.encodeIfPresent(nzd, forKey: "nzd")
        try values.encodeIfPresent(sek, forKey: "sek")
        try values.encodeIfPresent(sgd, forKey: "sgd")
        try values.encodeIfPresent(usd, forKey: "usd")
    }
}
