// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_options_afterpay_clearpay
public struct PaymentMethodOptionsAfterpayClearpay: Codable {
    /// Controls when the funds will be captured from the customer's account.
    public var captureMethod: CaptureMethod?
    /// Order identifier shown to the customer in Afterpayâ€™s online portal. We recommend using a value that helps you answer any questions a customer might have about
    /// the payment. The identifier is limited to 128 characters and may contain only letters, digits, underscores, backslashes and dashes.
    public var reference: String?
    /// Indicates that you intend to make future payments with this PaymentIntent's payment method.
    /// 
    /// Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    /// 
    /// When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    public var setupFutureUsage: SetupFutureUsage?

    /// Controls when the funds will be captured from the customer's account.
    public enum CaptureMethod: String, Codable, CaseIterable {
        case manual
    }

    /// Indicates that you intend to make future payments with this PaymentIntent's payment method.
    /// 
    /// Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    /// 
    /// When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    public enum SetupFutureUsage: String, Codable, CaseIterable {
        case `none`
    }

    public init(captureMethod: CaptureMethod? = nil, reference: String? = nil, setupFutureUsage: SetupFutureUsage? = nil) {
        self.captureMethod = captureMethod
        self.reference = reference
        self.setupFutureUsage = setupFutureUsage
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.captureMethod = try values.decodeIfPresent(CaptureMethod.self, forKey: "capture_method")
        self.reference = try values.decodeIfPresent(String.self, forKey: "reference")
        self.setupFutureUsage = try values.decodeIfPresent(SetupFutureUsage.self, forKey: "setup_future_usage")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(captureMethod, forKey: "capture_method")
        try values.encodeIfPresent(reference, forKey: "reference")
        try values.encodeIfPresent(setupFutureUsage, forKey: "setup_future_usage")
    }
}
