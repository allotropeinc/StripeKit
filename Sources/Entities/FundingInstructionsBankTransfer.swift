// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct FundingInstructionsBankTransfer: Codable {
    /// The country of the bank account to fund
    public var country: String
    /// A list of financial addresses that can be used to fund a particular balance
    public var financialAddresses: [FundingInstructionsBankTransferFinancialAddress]
    /// The bank_transfer type
    public var type: `Type`

    /// The bank_transfer type
    public enum `Type`: String, Codable, CaseIterable {
        case euBankTransfer = "eu_bank_transfer"
        case jpBankTransfer = "jp_bank_transfer"
    }

    public init(country: String, financialAddresses: [FundingInstructionsBankTransferFinancialAddress], type: `Type`) {
        self.country = country
        self.financialAddresses = financialAddresses
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.country = try values.decode(String.self, forKey: "country")
        self.financialAddresses = try values.decode([FundingInstructionsBankTransferFinancialAddress].self, forKey: "financial_addresses")
        self.type = try values.decode(`Type`.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(country, forKey: "country")
        try values.encode(financialAddresses, forKey: "financial_addresses")
        try values.encode(type, forKey: "type")
    }
}
