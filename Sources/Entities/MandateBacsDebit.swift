// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Mandate_bacs_debit
public struct MandateBacsDebit: Codable {
    /// The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.
    public var networkStatus: NetworkStatus
    /// The unique reference identifying the mandate on the Bacs network.
    public var reference: String
    /// The URL that will contain the mandate that the customer has signed.
    public var url: String

    /// The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.
    public enum NetworkStatus: String, Codable, CaseIterable {
        case accepted
        case pending
        case refused
        case revoked
    }

    public init(networkStatus: NetworkStatus, reference: String, url: String) {
        self.networkStatus = networkStatus
        self.reference = reference
        self.url = url
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.networkStatus = try values.decode(NetworkStatus.self, forKey: "network_status")
        self.reference = try values.decode(String.self, forKey: "reference")
        self.url = try values.decode(String.self, forKey: "url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(networkStatus, forKey: "network_status")
        try values.encode(reference, forKey: "reference")
        try values.encode(url, forKey: "url")
    }
}
