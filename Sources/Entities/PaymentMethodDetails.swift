// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_details
public struct PaymentMethodDetails: Codable {
    /// Payment_method_details_ach_credit_transfer
    public var achCreditTransfer: PaymentMethodDetailsAchCreditTransfer?
    /// Payment_method_details_ach_debit
    public var achDebit: PaymentMethodDetailsAchDebit?
    /// Payment_method_details_acss_debit
    public var acssDebit: PaymentMethodDetailsAcssDebit?
    /// Payment_method_details_affirm
    public var affirm: [String: AnyJSON]?
    /// Payment_method_details_afterpay_clearpay
    public var afterpayClearpay: PaymentMethodDetailsAfterpayClearpay?
    /// PaymentFlowsPrivatePaymentMethodsAlipayDetails
    public var alipay: PaymentFlowsPrivatePaymentMethodsAlipayDetails?
    /// Payment_method_details_au_becs_debit
    public var auBecsDebit: PaymentMethodDetailsAuBecsDebit?
    /// Payment_method_details_bacs_debit
    public var bacsDebit: PaymentMethodDetailsBacsDebit?
    /// Payment_method_details_bancontact
    public var bancontact: PaymentMethodDetailsBancontact?
    /// Payment_method_details_blik
    public var blik: [String: AnyJSON]?
    /// Payment_method_details_boleto
    public var boleto: PaymentMethodDetailsBoleto?
    /// Payment_method_details_card
    public var card: PaymentMethodDetailsCard?
    /// Payment_method_details_card_present
    public var cardPresent: PaymentMethodDetailsCardPresent?
    /// Payment_method_details_customer_balance
    public var customerBalance: [String: AnyJSON]?
    /// Payment_method_details_eps
    public var eps: PaymentMethodDetailsEps?
    /// Payment_method_details_fpx
    public var fpx: PaymentMethodDetailsFpx?
    /// Payment_method_details_giropay
    public var giropay: PaymentMethodDetailsGiropay?
    /// Payment_method_details_grabpay
    public var grabpay: PaymentMethodDetailsGrabpay?
    /// Payment_method_details_ideal
    public var ideal: PaymentMethodDetailsIdeal?
    /// Payment_method_details_interac_present
    public var interacPresent: PaymentMethodDetailsInteracPresent?
    /// Payment_method_details_klarna
    public var klarna: PaymentMethodDetailsKlarna?
    /// Payment_method_details_konbini
    public var konbini: PaymentMethodDetailsKonbini?
    /// Payment_method_details_link
    public var link: [String: AnyJSON]?
    /// Payment_method_details_multibanco
    public var multibanco: PaymentMethodDetailsMultibanco?
    /// Payment_method_details_oxxo
    public var oxxo: PaymentMethodDetailsOxxo?
    /// Payment_method_details_p24
    public var p24: PaymentMethodDetailsP24?
    /// Payment_method_details_paynow
    public var paynow: PaymentMethodDetailsPaynow?
    /// Payment_method_details_promptpay
    public var promptpay: PaymentMethodDetailsPromptpay?
    /// Payment_method_details_sepa_debit
    public var sepaDebit: PaymentMethodDetailsSepaDebit?
    /// Payment_method_details_sofort
    public var sofort: PaymentMethodDetailsSofort?
    /// Payment_method_details_stripe_account
    public var stripeAccount: [String: AnyJSON]?
    /// The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
    /// An additional hash is included on `payment_method_details` with a name matching this value.
    /// It contains information specific to the payment method.
    public var type: String
    /// Payment_method_details_us_bank_account
    public var usBankAccount: PaymentMethodDetailsUsBankAccount?
    /// Payment_method_details_wechat
    public var wechat: [String: AnyJSON]?
    /// Payment_method_details_wechat_pay
    public var wechatPay: PaymentMethodDetailsWechatPay?

    public init(achCreditTransfer: PaymentMethodDetailsAchCreditTransfer? = nil, achDebit: PaymentMethodDetailsAchDebit? = nil, acssDebit: PaymentMethodDetailsAcssDebit? = nil, affirm: [String: AnyJSON]? = nil, afterpayClearpay: PaymentMethodDetailsAfterpayClearpay? = nil, alipay: PaymentFlowsPrivatePaymentMethodsAlipayDetails? = nil, auBecsDebit: PaymentMethodDetailsAuBecsDebit? = nil, bacsDebit: PaymentMethodDetailsBacsDebit? = nil, bancontact: PaymentMethodDetailsBancontact? = nil, blik: [String: AnyJSON]? = nil, boleto: PaymentMethodDetailsBoleto? = nil, card: PaymentMethodDetailsCard? = nil, cardPresent: PaymentMethodDetailsCardPresent? = nil, customerBalance: [String: AnyJSON]? = nil, eps: PaymentMethodDetailsEps? = nil, fpx: PaymentMethodDetailsFpx? = nil, giropay: PaymentMethodDetailsGiropay? = nil, grabpay: PaymentMethodDetailsGrabpay? = nil, ideal: PaymentMethodDetailsIdeal? = nil, interacPresent: PaymentMethodDetailsInteracPresent? = nil, klarna: PaymentMethodDetailsKlarna? = nil, konbini: PaymentMethodDetailsKonbini? = nil, link: [String: AnyJSON]? = nil, multibanco: PaymentMethodDetailsMultibanco? = nil, oxxo: PaymentMethodDetailsOxxo? = nil, p24: PaymentMethodDetailsP24? = nil, paynow: PaymentMethodDetailsPaynow? = nil, promptpay: PaymentMethodDetailsPromptpay? = nil, sepaDebit: PaymentMethodDetailsSepaDebit? = nil, sofort: PaymentMethodDetailsSofort? = nil, stripeAccount: [String: AnyJSON]? = nil, type: String, usBankAccount: PaymentMethodDetailsUsBankAccount? = nil, wechat: [String: AnyJSON]? = nil, wechatPay: PaymentMethodDetailsWechatPay? = nil) {
        self.achCreditTransfer = achCreditTransfer
        self.achDebit = achDebit
        self.acssDebit = acssDebit
        self.affirm = affirm
        self.afterpayClearpay = afterpayClearpay
        self.alipay = alipay
        self.auBecsDebit = auBecsDebit
        self.bacsDebit = bacsDebit
        self.bancontact = bancontact
        self.blik = blik
        self.boleto = boleto
        self.card = card
        self.cardPresent = cardPresent
        self.customerBalance = customerBalance
        self.eps = eps
        self.fpx = fpx
        self.giropay = giropay
        self.grabpay = grabpay
        self.ideal = ideal
        self.interacPresent = interacPresent
        self.klarna = klarna
        self.konbini = konbini
        self.link = link
        self.multibanco = multibanco
        self.oxxo = oxxo
        self.p24 = p24
        self.paynow = paynow
        self.promptpay = promptpay
        self.sepaDebit = sepaDebit
        self.sofort = sofort
        self.stripeAccount = stripeAccount
        self.type = type
        self.usBankAccount = usBankAccount
        self.wechat = wechat
        self.wechatPay = wechatPay
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.achCreditTransfer = try values.decodeIfPresent(PaymentMethodDetailsAchCreditTransfer.self, forKey: "ach_credit_transfer")
        self.achDebit = try values.decodeIfPresent(PaymentMethodDetailsAchDebit.self, forKey: "ach_debit")
        self.acssDebit = try values.decodeIfPresent(PaymentMethodDetailsAcssDebit.self, forKey: "acss_debit")
        self.affirm = try values.decodeIfPresent([String: AnyJSON].self, forKey: "affirm")
        self.afterpayClearpay = try values.decodeIfPresent(PaymentMethodDetailsAfterpayClearpay.self, forKey: "afterpay_clearpay")
        self.alipay = try values.decodeIfPresent(PaymentFlowsPrivatePaymentMethodsAlipayDetails.self, forKey: "alipay")
        self.auBecsDebit = try values.decodeIfPresent(PaymentMethodDetailsAuBecsDebit.self, forKey: "au_becs_debit")
        self.bacsDebit = try values.decodeIfPresent(PaymentMethodDetailsBacsDebit.self, forKey: "bacs_debit")
        self.bancontact = try values.decodeIfPresent(PaymentMethodDetailsBancontact.self, forKey: "bancontact")
        self.blik = try values.decodeIfPresent([String: AnyJSON].self, forKey: "blik")
        self.boleto = try values.decodeIfPresent(PaymentMethodDetailsBoleto.self, forKey: "boleto")
        self.card = try values.decodeIfPresent(PaymentMethodDetailsCard.self, forKey: "card")
        self.cardPresent = try values.decodeIfPresent(PaymentMethodDetailsCardPresent.self, forKey: "card_present")
        self.customerBalance = try values.decodeIfPresent([String: AnyJSON].self, forKey: "customer_balance")
        self.eps = try values.decodeIfPresent(PaymentMethodDetailsEps.self, forKey: "eps")
        self.fpx = try values.decodeIfPresent(PaymentMethodDetailsFpx.self, forKey: "fpx")
        self.giropay = try values.decodeIfPresent(PaymentMethodDetailsGiropay.self, forKey: "giropay")
        self.grabpay = try values.decodeIfPresent(PaymentMethodDetailsGrabpay.self, forKey: "grabpay")
        self.ideal = try values.decodeIfPresent(PaymentMethodDetailsIdeal.self, forKey: "ideal")
        self.interacPresent = try values.decodeIfPresent(PaymentMethodDetailsInteracPresent.self, forKey: "interac_present")
        self.klarna = try values.decodeIfPresent(PaymentMethodDetailsKlarna.self, forKey: "klarna")
        self.konbini = try values.decodeIfPresent(PaymentMethodDetailsKonbini.self, forKey: "konbini")
        self.link = try values.decodeIfPresent([String: AnyJSON].self, forKey: "link")
        self.multibanco = try values.decodeIfPresent(PaymentMethodDetailsMultibanco.self, forKey: "multibanco")
        self.oxxo = try values.decodeIfPresent(PaymentMethodDetailsOxxo.self, forKey: "oxxo")
        self.p24 = try values.decodeIfPresent(PaymentMethodDetailsP24.self, forKey: "p24")
        self.paynow = try values.decodeIfPresent(PaymentMethodDetailsPaynow.self, forKey: "paynow")
        self.promptpay = try values.decodeIfPresent(PaymentMethodDetailsPromptpay.self, forKey: "promptpay")
        self.sepaDebit = try values.decodeIfPresent(PaymentMethodDetailsSepaDebit.self, forKey: "sepa_debit")
        self.sofort = try values.decodeIfPresent(PaymentMethodDetailsSofort.self, forKey: "sofort")
        self.stripeAccount = try values.decodeIfPresent([String: AnyJSON].self, forKey: "stripe_account")
        self.type = try values.decode(String.self, forKey: "type")
        self.usBankAccount = try values.decodeIfPresent(PaymentMethodDetailsUsBankAccount.self, forKey: "us_bank_account")
        self.wechat = try values.decodeIfPresent([String: AnyJSON].self, forKey: "wechat")
        self.wechatPay = try values.decodeIfPresent(PaymentMethodDetailsWechatPay.self, forKey: "wechat_pay")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(achCreditTransfer, forKey: "ach_credit_transfer")
        try values.encodeIfPresent(achDebit, forKey: "ach_debit")
        try values.encodeIfPresent(acssDebit, forKey: "acss_debit")
        try values.encodeIfPresent(affirm, forKey: "affirm")
        try values.encodeIfPresent(afterpayClearpay, forKey: "afterpay_clearpay")
        try values.encodeIfPresent(alipay, forKey: "alipay")
        try values.encodeIfPresent(auBecsDebit, forKey: "au_becs_debit")
        try values.encodeIfPresent(bacsDebit, forKey: "bacs_debit")
        try values.encodeIfPresent(bancontact, forKey: "bancontact")
        try values.encodeIfPresent(blik, forKey: "blik")
        try values.encodeIfPresent(boleto, forKey: "boleto")
        try values.encodeIfPresent(card, forKey: "card")
        try values.encodeIfPresent(cardPresent, forKey: "card_present")
        try values.encodeIfPresent(customerBalance, forKey: "customer_balance")
        try values.encodeIfPresent(eps, forKey: "eps")
        try values.encodeIfPresent(fpx, forKey: "fpx")
        try values.encodeIfPresent(giropay, forKey: "giropay")
        try values.encodeIfPresent(grabpay, forKey: "grabpay")
        try values.encodeIfPresent(ideal, forKey: "ideal")
        try values.encodeIfPresent(interacPresent, forKey: "interac_present")
        try values.encodeIfPresent(klarna, forKey: "klarna")
        try values.encodeIfPresent(konbini, forKey: "konbini")
        try values.encodeIfPresent(link, forKey: "link")
        try values.encodeIfPresent(multibanco, forKey: "multibanco")
        try values.encodeIfPresent(oxxo, forKey: "oxxo")
        try values.encodeIfPresent(p24, forKey: "p24")
        try values.encodeIfPresent(paynow, forKey: "paynow")
        try values.encodeIfPresent(promptpay, forKey: "promptpay")
        try values.encodeIfPresent(sepaDebit, forKey: "sepa_debit")
        try values.encodeIfPresent(sofort, forKey: "sofort")
        try values.encodeIfPresent(stripeAccount, forKey: "stripe_account")
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(usBankAccount, forKey: "us_bank_account")
        try values.encodeIfPresent(wechat, forKey: "wechat")
        try values.encodeIfPresent(wechatPay, forKey: "wechat_pay")
    }
}
