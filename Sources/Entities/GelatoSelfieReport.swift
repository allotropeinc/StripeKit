// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Result from a selfie check
public struct GelatoSelfieReport: Codable {
    /// ID of the [File](https://stripe.com/docs/api/files) holding the image of the identity document used in this check.
    public var document: String?
    /// Details on the verification error. Present when status is `unverified`.
    public var error: GelatoSelfieReportError?
    /// ID of the [File](https://stripe.com/docs/api/files) holding the image of the selfie used in this check.
    public var selfie: String?
    /// Status of this `selfie` check.
    public var status: Status

    /// Status of this `selfie` check.
    public enum Status: String, Codable, CaseIterable {
        case unverified
        case verified
    }

    public init(document: String? = nil, error: GelatoSelfieReportError? = nil, selfie: String? = nil, status: Status) {
        self.document = document
        self.error = error
        self.selfie = selfie
        self.status = status
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.document = try values.decodeIfPresent(String.self, forKey: "document")
        self.error = try values.decodeIfPresent(GelatoSelfieReportError.self, forKey: "error")
        self.selfie = try values.decodeIfPresent(String.self, forKey: "selfie")
        self.status = try values.decode(Status.self, forKey: "status")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(document, forKey: "document")
        try values.encodeIfPresent(error, forKey: "error")
        try values.encodeIfPresent(selfie, forKey: "selfie")
        try values.encode(status, forKey: "status")
    }
}
