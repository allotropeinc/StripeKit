// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Tax_id_verification
public struct TaxIDVerification: Codable {
    /// Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.
    public var status: Status
    /// Verified address.
    public var verifiedAddress: String?
    /// Verified name.
    public var verifiedName: String?

    /// Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.
    public enum Status: String, Codable, CaseIterable {
        case pending
        case unavailable
        case unverified
        case verified
    }

    public init(status: Status, verifiedAddress: String? = nil, verifiedName: String? = nil) {
        self.status = status
        self.verifiedAddress = verifiedAddress
        self.verifiedName = verifiedName
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.status = try values.decode(Status.self, forKey: "status")
        self.verifiedAddress = try values.decodeIfPresent(String.self, forKey: "verified_address")
        self.verifiedName = try values.decodeIfPresent(String.self, forKey: "verified_name")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(status, forKey: "status")
        try values.encodeIfPresent(verifiedAddress, forKey: "verified_address")
        try values.encodeIfPresent(verifiedName, forKey: "verified_name")
    }
}
