// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_fpx
public struct PaymentMethodFpx: Codable {
    /// The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, or `pb_enterprise`.
    public var bank: Bank

    /// The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, or `pb_enterprise`.
    public enum Bank: String, Codable, CaseIterable {
        case affinBank = "affin_bank"
        case agrobank
        case allianceBank = "alliance_bank"
        case ambank
        case bankIslam = "bank_islam"
        case bankMuamalat = "bank_muamalat"
        case bankRakyat = "bank_rakyat"
        case bsn
        case cimb
        case deutscheBank = "deutsche_bank"
        case hongLeongBank = "hong_leong_bank"
        case hsbc
        case kfh
        case maybank2e
        case maybank2u
        case ocbc
        case pbEnterprise = "pb_enterprise"
        case publicBank = "public_bank"
        case rhb
        case standardChartered = "standard_chartered"
        case uob
    }

    public init(bank: Bank) {
        self.bank = bank
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bank = try values.decode(Bank.self, forKey: "bank")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(bank, forKey: "bank")
    }
}
