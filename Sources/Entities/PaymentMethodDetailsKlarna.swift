// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_details_klarna
public struct PaymentMethodDetailsKlarna: Codable {
    /// The Klarna payment method used for this transaction.
    /// Can be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`
    public var paymentMethodCategory: String?
    /// Preferred language of the Klarna authorization page that the customer is redirected to.
    /// Can be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `en-AU`, `en-NZ`, `en-CA`, or `fr-CA`
    public var preferredLocale: String?

    public init(paymentMethodCategory: String? = nil, preferredLocale: String? = nil) {
        self.paymentMethodCategory = paymentMethodCategory
        self.preferredLocale = preferredLocale
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.paymentMethodCategory = try values.decodeIfPresent(String.self, forKey: "payment_method_category")
        self.preferredLocale = try values.decodeIfPresent(String.self, forKey: "preferred_locale")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(paymentMethodCategory, forKey: "payment_method_category")
        try values.encodeIfPresent(preferredLocale, forKey: "preferred_locale")
    }
}
