// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_details_card_wallet_visa_checkout
public struct PaymentMethodDetailsCardWalletVisaCheckout: Codable {
    /// Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    public var billingAddress: Address?
    /// Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    public var email: String?
    /// Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    public var name: String?
    /// Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    public var shippingAddress: Address?

    public init(billingAddress: Address? = nil, email: String? = nil, name: String? = nil, shippingAddress: Address? = nil) {
        self.billingAddress = billingAddress
        self.email = email
        self.name = name
        self.shippingAddress = shippingAddress
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.billingAddress = try values.decodeIfPresent(Address.self, forKey: "billing_address")
        self.email = try values.decodeIfPresent(String.self, forKey: "email")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.shippingAddress = try values.decodeIfPresent(Address.self, forKey: "shipping_address")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(billingAddress, forKey: "billing_address")
        try values.encodeIfPresent(email, forKey: "email")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(shippingAddress, forKey: "shipping_address")
    }
}
