// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PaymentIntentNextActionVerifyWithMicrodeposits: Codable {
    /// The timestamp when the microdeposits are expected to land.
    public var arrivalDate: Int
    /// The URL for the hosted verification page, which allows customers to verify their bank account.
    public var hostedVerificationURL: String
    /// The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.
    public var microdepositType: MicrodepositType?

    /// The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.
    public enum MicrodepositType: String, Codable, CaseIterable {
        case amounts
        case descriptorCode = "descriptor_code"
    }

    public init(arrivalDate: Int, hostedVerificationURL: String, microdepositType: MicrodepositType? = nil) {
        self.arrivalDate = arrivalDate
        self.hostedVerificationURL = hostedVerificationURL
        self.microdepositType = microdepositType
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.arrivalDate = try values.decode(Int.self, forKey: "arrival_date")
        self.hostedVerificationURL = try values.decode(String.self, forKey: "hosted_verification_url")
        self.microdepositType = try values.decodeIfPresent(MicrodepositType.self, forKey: "microdeposit_type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(arrivalDate, forKey: "arrival_date")
        try values.encode(hostedVerificationURL, forKey: "hosted_verification_url")
        try values.encodeIfPresent(microdepositType, forKey: "microdeposit_type")
    }
}
