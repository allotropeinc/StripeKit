// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions: Codable {
    /// Timestamp describing when an OutboundPayment changed status to `canceled`.
    public var canceledAt: Int?
    /// Timestamp describing when an OutboundPayment changed status to `failed`.
    public var failedAt: Int?
    /// Timestamp describing when an OutboundPayment changed status to `posted`.
    public var postedAt: Int?
    /// Timestamp describing when an OutboundPayment changed status to `returned`.
    public var returnedAt: Int?

    public init(canceledAt: Int? = nil, failedAt: Int? = nil, postedAt: Int? = nil, returnedAt: Int? = nil) {
        self.canceledAt = canceledAt
        self.failedAt = failedAt
        self.postedAt = postedAt
        self.returnedAt = returnedAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.canceledAt = try values.decodeIfPresent(Int.self, forKey: "canceled_at")
        self.failedAt = try values.decodeIfPresent(Int.self, forKey: "failed_at")
        self.postedAt = try values.decodeIfPresent(Int.self, forKey: "posted_at")
        self.returnedAt = try values.decodeIfPresent(Int.self, forKey: "returned_at")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(canceledAt, forKey: "canceled_at")
        try values.encodeIfPresent(failedAt, forKey: "failed_at")
        try values.encodeIfPresent(postedAt, forKey: "posted_at")
        try values.encodeIfPresent(returnedAt, forKey: "returned_at")
    }
}
