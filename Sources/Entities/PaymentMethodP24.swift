// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_p24
public struct PaymentMethodP24: Codable {
    /// The customer's bank, if provided.
    public var bank: Bank?

    /// The customer's bank, if provided.
    public enum Bank: String, Codable, CaseIterable {
        case aliorBank = "alior_bank"
        case bankMillennium = "bank_millennium"
        case bankNowyBfgSa = "bank_nowy_bfg_sa"
        case bankPekaoSa = "bank_pekao_sa"
        case bankiSpbdzielcze = "banki_spbdzielcze"
        case blik
        case bnpParibas = "bnp_paribas"
        case boz
        case citiHandlowy = "citi_handlowy"
        case creditAgricole = "credit_agricole"
        case envelobank
        case etransferPocztowy24 = "etransfer_pocztowy24"
        case getinBank = "getin_bank"
        case ideabank
        case ing
        case inteligo
        case mbankMtransfer = "mbank_mtransfer"
        case nestPrzelew = "nest_przelew"
        case noblePay = "noble_pay"
        case pbacZIpko = "pbac_z_ipko"
        case plusBank = "plus_bank"
        case santanderPrzelew24 = "santander_przelew24"
        case tmobileUsbugiBankowe = "tmobile_usbugi_bankowe"
        case toyotaBank = "toyota_bank"
        case volkswagenBank = "volkswagen_bank"
    }

    public init(bank: Bank? = nil) {
        self.bank = bank
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bank = try values.decodeIfPresent(Bank.self, forKey: "bank")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bank, forKey: "bank")
    }
}
