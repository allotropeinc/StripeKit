// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_details_giropay
public struct PaymentMethodDetailsGiropay: Codable {
    /// Bank code of bank associated with the bank account.
    public var bankCode: String?
    /// Name of the bank associated with the bank account.
    public var bankName: String?
    /// Bank Identifier Code of the bank associated with the bank account.
    public var bic: String?
    /// Owner's verified full name. Values are verified or provided by Giropay directly
    /// (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    /// Giropay rarely provides this information so the attribute is usually empty.
    public var verifiedName: String?

    public init(bankCode: String? = nil, bankName: String? = nil, bic: String? = nil, verifiedName: String? = nil) {
        self.bankCode = bankCode
        self.bankName = bankName
        self.bic = bic
        self.verifiedName = verifiedName
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bankCode = try values.decodeIfPresent(String.self, forKey: "bank_code")
        self.bankName = try values.decodeIfPresent(String.self, forKey: "bank_name")
        self.bic = try values.decodeIfPresent(String.self, forKey: "bic")
        self.verifiedName = try values.decodeIfPresent(String.self, forKey: "verified_name")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bankCode, forKey: "bank_code")
        try values.encodeIfPresent(bankName, forKey: "bank_name")
        try values.encodeIfPresent(bic, forKey: "bic")
        try values.encodeIfPresent(verifiedName, forKey: "verified_name")
    }
}
