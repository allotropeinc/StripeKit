// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SourceTypeAchDebit: Codable {
    public var bankName: String?
    public var country: String?
    public var fingerprint: String?
    public var last4: String?
    public var routingNumber: String?
    public var type: String?

    public init(bankName: String? = nil, country: String? = nil, fingerprint: String? = nil, last4: String? = nil, routingNumber: String? = nil, type: String? = nil) {
        self.bankName = bankName
        self.country = country
        self.fingerprint = fingerprint
        self.last4 = last4
        self.routingNumber = routingNumber
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.bankName = try values.decodeIfPresent(String.self, forKey: "bank_name")
        self.country = try values.decodeIfPresent(String.self, forKey: "country")
        self.fingerprint = try values.decodeIfPresent(String.self, forKey: "fingerprint")
        self.last4 = try values.decodeIfPresent(String.self, forKey: "last4")
        self.routingNumber = try values.decodeIfPresent(String.self, forKey: "routing_number")
        self.type = try values.decodeIfPresent(String.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(bankName, forKey: "bank_name")
        try values.encodeIfPresent(country, forKey: "country")
        try values.encodeIfPresent(fingerprint, forKey: "fingerprint")
        try values.encodeIfPresent(last4, forKey: "last4")
        try values.encodeIfPresent(routingNumber, forKey: "routing_number")
        try values.encodeIfPresent(type, forKey: "type")
    }
}
