// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SourceTypeAchCreditTransfer: Codable {
    public var accountNumber: String?
    public var bankName: String?
    public var fingerprint: String?
    public var refundAccountHolderName: String?
    public var refundAccountHolderType: String?
    public var refundRoutingNumber: String?
    public var routingNumber: String?
    public var swiftCode: String?

    public init(accountNumber: String? = nil, bankName: String? = nil, fingerprint: String? = nil, refundAccountHolderName: String? = nil, refundAccountHolderType: String? = nil, refundRoutingNumber: String? = nil, routingNumber: String? = nil, swiftCode: String? = nil) {
        self.accountNumber = accountNumber
        self.bankName = bankName
        self.fingerprint = fingerprint
        self.refundAccountHolderName = refundAccountHolderName
        self.refundAccountHolderType = refundAccountHolderType
        self.refundRoutingNumber = refundRoutingNumber
        self.routingNumber = routingNumber
        self.swiftCode = swiftCode
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.accountNumber = try values.decodeIfPresent(String.self, forKey: "account_number")
        self.bankName = try values.decodeIfPresent(String.self, forKey: "bank_name")
        self.fingerprint = try values.decodeIfPresent(String.self, forKey: "fingerprint")
        self.refundAccountHolderName = try values.decodeIfPresent(String.self, forKey: "refund_account_holder_name")
        self.refundAccountHolderType = try values.decodeIfPresent(String.self, forKey: "refund_account_holder_type")
        self.refundRoutingNumber = try values.decodeIfPresent(String.self, forKey: "refund_routing_number")
        self.routingNumber = try values.decodeIfPresent(String.self, forKey: "routing_number")
        self.swiftCode = try values.decodeIfPresent(String.self, forKey: "swift_code")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(accountNumber, forKey: "account_number")
        try values.encodeIfPresent(bankName, forKey: "bank_name")
        try values.encodeIfPresent(fingerprint, forKey: "fingerprint")
        try values.encodeIfPresent(refundAccountHolderName, forKey: "refund_account_holder_name")
        try values.encodeIfPresent(refundAccountHolderType, forKey: "refund_account_holder_type")
        try values.encodeIfPresent(refundRoutingNumber, forKey: "refund_routing_number")
        try values.encodeIfPresent(routingNumber, forKey: "routing_number")
        try values.encodeIfPresent(swiftCode, forKey: "swift_code")
    }
}
