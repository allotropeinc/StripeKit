// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Represents a reader action to process a setup intent
public struct TerminalReaderReaderResourceProcessSetupIntentAction: Codable {
    public var generatedCard: String?
    /// Most recent SetupIntent processed by the reader.
    public var setupIntent: SetupIntent

    /// Most recent SetupIntent processed by the reader.
    public final class SetupIntent: Codable {
        public let string: String?
        /// A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.
        /// For example, you could use a SetupIntent to set up and save your customer's card without immediately collecting a payment.
        /// Later, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.
        /// 
        /// Create a SetupIntent as soon as you're ready to collect your customer's payment credentials.
        /// Do not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid.
        /// The SetupIntent then transitions through multiple [statuses](https://stripe.com/docs/payments/intents#intent-statuses) as it guides
        /// you through the setup process.
        /// 
        /// Successful SetupIntents result in payment credentials that are optimized for future payments.
        /// For example, cardholders in [certain regions](/guides/strong-customer-authentication) may need to be run through
        /// [Strong Customer Authentication](https://stripe.com/docs/strong-customer-authentication) at the time of payment method collection
        /// in order to streamline later [off-session payments](https://stripe.com/docs/payments/setup-intents).
        /// If the SetupIntent is used with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer), upon success,
        /// it will automatically attach the resulting payment method to that Customer.
        /// We recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on
        /// PaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods.
        /// 
        /// By using SetupIntents, you ensure that your customers experience the minimum set of required friction,
        /// even as regulations change over time.
        /// 
        /// Related guide: [Setup Intents API](https://stripe.com/docs/payments/setup-intents).
        public let setupIntent: StripeKit.SetupIntent?

        public init(string: String? = nil, setupIntent: StripeKit.SetupIntent? = nil) {
            self.string = string
            self.setupIntent = setupIntent
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            self.string = try? container.decode(String.self)
            self.setupIntent = try? container.decode(StripeKit.SetupIntent.self)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            if let value = string { try container.encode(value) }
            if let value = setupIntent { try container.encode(value) }
        }
    }

    public init(generatedCard: String? = nil, setupIntent: SetupIntent) {
        self.generatedCard = generatedCard
        self.setupIntent = setupIntent
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.generatedCard = try values.decodeIfPresent(String.self, forKey: "generated_card")
        self.setupIntent = try values.decode(SetupIntent.self, forKey: "setup_intent")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(generatedCard, forKey: "generated_card")
        try values.encode(setupIntent, forKey: "setup_intent")
    }
}
