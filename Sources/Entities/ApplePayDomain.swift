// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ApplePayDomain: Codable {
    /// Time at which the object was created. Measured in seconds since the Unix epoch.
    public var created: Int
    public var domainName: String
    /// Unique identifier for the object.
    public var id: String
    /// Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    public var isLivemode: Bool
    /// String representing the object's type. Objects of the same type share the same value.
    public var object: Object

    /// String representing the object's type. Objects of the same type share the same value.
    public enum Object: String, Codable, CaseIterable {
        case applePayDomain = "apple_pay_domain"
    }

    public init(created: Int, domainName: String, id: String, isLivemode: Bool, object: Object) {
        self.created = created
        self.domainName = domainName
        self.id = id
        self.isLivemode = isLivemode
        self.object = object
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.created = try values.decode(Int.self, forKey: "created")
        self.domainName = try values.decode(String.self, forKey: "domain_name")
        self.id = try values.decode(String.self, forKey: "id")
        self.isLivemode = try values.decode(Bool.self, forKey: "livemode")
        self.object = try values.decode(Object.self, forKey: "object")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(created, forKey: "created")
        try values.encode(domainName, forKey: "domain_name")
        try values.encode(id, forKey: "id")
        try values.encode(isLivemode, forKey: "livemode")
        try values.encode(object, forKey: "object")
    }
}
