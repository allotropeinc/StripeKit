// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PortalSubscriptionCancel: Codable {
    /// PortalSubscriptionCancellationReason
    public var cancellationReason: PortalSubscriptionCancellationReason
    /// Whether the feature is enabled.
    public var isEnabled: Bool
    /// Whether to cancel subscriptions immediately or at the end of the billing period.
    public var mode: Mode
    /// Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.
    public var prorationBehavior: ProrationBehavior

    /// Whether to cancel subscriptions immediately or at the end of the billing period.
    public enum Mode: String, Codable, CaseIterable {
        case atPeriodEnd = "at_period_end"
        case immediately
    }

    /// Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.
    public enum ProrationBehavior: String, Codable, CaseIterable {
        case alwaysInvoice = "always_invoice"
        case createProrations = "create_prorations"
        case `none`
    }

    public init(cancellationReason: PortalSubscriptionCancellationReason, isEnabled: Bool, mode: Mode, prorationBehavior: ProrationBehavior) {
        self.cancellationReason = cancellationReason
        self.isEnabled = isEnabled
        self.mode = mode
        self.prorationBehavior = prorationBehavior
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.cancellationReason = try values.decode(PortalSubscriptionCancellationReason.self, forKey: "cancellation_reason")
        self.isEnabled = try values.decode(Bool.self, forKey: "enabled")
        self.mode = try values.decode(Mode.self, forKey: "mode")
        self.prorationBehavior = try values.decode(ProrationBehavior.self, forKey: "proration_behavior")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(cancellationReason, forKey: "cancellation_reason")
        try values.encode(isEnabled, forKey: "enabled")
        try values.encode(mode, forKey: "mode")
        try values.encode(prorationBehavior, forKey: "proration_behavior")
    }
}
