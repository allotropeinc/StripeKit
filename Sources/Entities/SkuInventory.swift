// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SkuInventory: Codable {
    /// The count of inventory available. Will be present if and only if `type` is `finite`.
    public var quantity: Int?
    /// Inventory type. Possible values are `finite`, `bucket` (not quantified), and `infinite`.
    public var type: String
    /// An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.
    public var value: String?

    public init(quantity: Int? = nil, type: String, value: String? = nil) {
        self.quantity = quantity
        self.type = type
        self.value = value
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.quantity = try values.decodeIfPresent(Int.self, forKey: "quantity")
        self.type = try values.decode(String.self, forKey: "type")
        self.value = try values.decodeIfPresent(String.self, forKey: "value")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(quantity, forKey: "quantity")
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(value, forKey: "value")
    }
}
