// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// BankConnectionsResourceOwnership
///
/// Describes a snapshot of the owners of an account at a particular point in time.
public struct FinancialConnectionsAccountOwnership: Codable {
    /// Time at which the object was created. Measured in seconds since the Unix epoch.
    public var created: Int
    /// Unique identifier for the object.
    public var id: String
    /// String representing the object's type. Objects of the same type share the same value.
    public var object: Object
    /// BankConnectionsResourceOwnerList
    ///
    /// A paginated list of owners for this account.
    public var owners: Owners

    /// String representing the object's type. Objects of the same type share the same value.
    public enum Object: String, Codable, CaseIterable {
        case financialConnectionsAccountOwnership = "financial_connections.account_ownership"
    }

    /// BankConnectionsResourceOwnerList
    ///
    /// A paginated list of owners for this account.
    public struct Owners: Codable {
        /// Details about each object.
        public var data: [FinancialConnectionsAccountOwner]
        /// True if this list has another page of items after this one that can be fetched.
        public var hasMore: Bool
        /// String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
        public var object: Object
        /// The URL where this list can be accessed.
        public var url: String

        /// String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
        public enum Object: String, Codable, CaseIterable {
            case list
        }

        public init(data: [FinancialConnectionsAccountOwner], hasMore: Bool, object: Object, url: String) {
            self.data = data
            self.hasMore = hasMore
            self.object = object
            self.url = url
        }

        public init(from decoder: Decoder) throws {
            let values = try decoder.container(keyedBy: StringCodingKey.self)
            self.data = try values.decode([FinancialConnectionsAccountOwner].self, forKey: "data")
            self.hasMore = try values.decode(Bool.self, forKey: "has_more")
            self.object = try values.decode(Object.self, forKey: "object")
            self.url = try values.decode(String.self, forKey: "url")
        }

        public func encode(to encoder: Encoder) throws {
            var values = encoder.container(keyedBy: StringCodingKey.self)
            try values.encode(data, forKey: "data")
            try values.encode(hasMore, forKey: "has_more")
            try values.encode(object, forKey: "object")
            try values.encode(url, forKey: "url")
        }
    }

    public init(created: Int, id: String, object: Object, owners: Owners) {
        self.created = created
        self.id = id
        self.object = object
        self.owners = owners
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.created = try values.decode(Int.self, forKey: "created")
        self.id = try values.decode(String.self, forKey: "id")
        self.object = try values.decode(Object.self, forKey: "object")
        self.owners = try values.decode(Owners.self, forKey: "owners")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(created, forKey: "created")
        try values.encode(id, forKey: "id")
        try values.encode(object, forKey: "object")
        try values.encode(owners, forKey: "owners")
    }
}
