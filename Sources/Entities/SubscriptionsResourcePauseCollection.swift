// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription
/// should be paused.
public struct SubscriptionsResourcePauseCollection: Codable {
    /// The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.
    public var behavior: Behavior
    /// The time after which the subscription will resume collecting payments.
    public var resumesAt: Int?

    /// The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.
    public enum Behavior: String, Codable, CaseIterable {
        case keepAsDraft = "keep_as_draft"
        case markUncollectible = "mark_uncollectible"
        case void
    }

    public init(behavior: Behavior, resumesAt: Int? = nil) {
        self.behavior = behavior
        self.resumesAt = resumesAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.behavior = try values.decode(Behavior.self, forKey: "behavior")
        self.resumesAt = try values.decodeIfPresent(Int.self, forKey: "resumes_at")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(behavior, forKey: "behavior")
        try values.encodeIfPresent(resumesAt, forKey: "resumes_at")
    }
}
