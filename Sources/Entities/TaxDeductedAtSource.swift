// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct TaxDeductedAtSource: Codable {
    /// Unique identifier for the object.
    public var id: String
    /// String representing the object's type. Objects of the same type share the same value.
    public var object: Object
    /// The end of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.
    public var periodEnd: Int
    /// The start of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.
    public var periodStart: Int
    /// The TAN that was supplied to Stripe when TDS was assessed
    public var taxDeductionAccountNumber: String

    /// String representing the object's type. Objects of the same type share the same value.
    public enum Object: String, Codable, CaseIterable {
        case taxDeductedAtSource = "tax_deducted_at_source"
    }

    public init(id: String, object: Object, periodEnd: Int, periodStart: Int, taxDeductionAccountNumber: String) {
        self.id = id
        self.object = object
        self.periodEnd = periodEnd
        self.periodStart = periodStart
        self.taxDeductionAccountNumber = taxDeductionAccountNumber
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(String.self, forKey: "id")
        self.object = try values.decode(Object.self, forKey: "object")
        self.periodEnd = try values.decode(Int.self, forKey: "period_end")
        self.periodStart = try values.decode(Int.self, forKey: "period_start")
        self.taxDeductionAccountNumber = try values.decode(String.self, forKey: "tax_deduction_account_number")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(object, forKey: "object")
        try values.encode(periodEnd, forKey: "period_end")
        try values.encode(periodStart, forKey: "period_start")
        try values.encode(taxDeductionAccountNumber, forKey: "tax_deduction_account_number")
    }
}
