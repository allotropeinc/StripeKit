// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Payment_method_details_card_installments_plan
public struct PaymentMethodDetailsCardInstallmentsPlan: Codable {
    /// For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
    public var count: Int?
    /// For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
    /// One of `month`.
    public var interval: Interval?
    /// Type of installment plan, one of `fixed_count`.
    public var type: `Type`

    /// For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
    /// One of `month`.
    public enum Interval: String, Codable, CaseIterable {
        case month
    }

    /// Type of installment plan, one of `fixed_count`.
    public enum `Type`: String, Codable, CaseIterable {
        case fixedCount = "fixed_count"
    }

    public init(count: Int? = nil, interval: Interval? = nil, type: `Type`) {
        self.count = count
        self.interval = interval
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.count = try values.decodeIfPresent(Int.self, forKey: "count")
        self.interval = try values.decodeIfPresent(Interval.self, forKey: "interval")
        self.type = try values.decode(`Type`.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(count, forKey: "count")
        try values.encodeIfPresent(interval, forKey: "interval")
        try values.encode(type, forKey: "type")
    }
}
