// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PaymentIntentNextAction: Codable {
    /// PaymentIntentNextActionAlipayHandleRedirect
    public var alipayHandleRedirect: PaymentIntentNextActionAlipayHandleRedirect?
    /// Payment_intent_next_action_boleto
    public var boletoDisplayDetails: PaymentIntentNextActionBoleto?
    /// PaymentIntentNextActionCardAwaitNotification
    public var cardAwaitNotification: PaymentIntentNextActionCardAwaitNotification?
    /// PaymentIntentNextActionDisplayBankTransferInstructions
    public var displayBankTransferInstructions: PaymentIntentNextActionDisplayBankTransferInstructions?
    /// Payment_intent_next_action_konbini
    public var konbiniDisplayDetails: PaymentIntentNextActionKonbini?
    /// PaymentIntentNextActionDisplayOxxoDetails
    public var oxxoDisplayDetails: PaymentIntentNextActionDisplayOxxoDetails?
    /// PaymentIntentNextActionPaynowDisplayQrCode
    public var paynowDisplayQrCode: PaymentIntentNextActionPaynowDisplayQrCode?
    /// PaymentIntentNextActionPromptpayDisplayQrCode
    public var promptpayDisplayQrCode: PaymentIntentNextActionPromptpayDisplayQrCode?
    /// PaymentIntentNextActionRedirectToUrl
    public var redirectToURL: PaymentIntentNextActionRedirectToURL?
    /// Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.
    public var type: String
    /// When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.
    public var useStripeSdk: [String: AnyJSON]?
    /// PaymentIntentNextActionVerifyWithMicrodeposits
    public var verifyWithMicrodeposits: PaymentIntentNextActionVerifyWithMicrodeposits?
    /// PaymentIntentNextActionWechatPayDisplayQrCode
    public var wechatPayDisplayQrCode: PaymentIntentNextActionWechatPayDisplayQrCode?
    /// PaymentIntentNextActionWechatPayRedirectToAndroidApp
    public var wechatPayRedirectToAndroidApp: PaymentIntentNextActionWechatPayRedirectToAndroidApp?
    /// PaymentIntentNextActionWechatPayRedirectToIOSApp
    public var wechatPayRedirectToIosApp: PaymentIntentNextActionWechatPayRedirectToIosApp?

    public init(alipayHandleRedirect: PaymentIntentNextActionAlipayHandleRedirect? = nil, boletoDisplayDetails: PaymentIntentNextActionBoleto? = nil, cardAwaitNotification: PaymentIntentNextActionCardAwaitNotification? = nil, displayBankTransferInstructions: PaymentIntentNextActionDisplayBankTransferInstructions? = nil, konbiniDisplayDetails: PaymentIntentNextActionKonbini? = nil, oxxoDisplayDetails: PaymentIntentNextActionDisplayOxxoDetails? = nil, paynowDisplayQrCode: PaymentIntentNextActionPaynowDisplayQrCode? = nil, promptpayDisplayQrCode: PaymentIntentNextActionPromptpayDisplayQrCode? = nil, redirectToURL: PaymentIntentNextActionRedirectToURL? = nil, type: String, useStripeSdk: [String: AnyJSON]? = nil, verifyWithMicrodeposits: PaymentIntentNextActionVerifyWithMicrodeposits? = nil, wechatPayDisplayQrCode: PaymentIntentNextActionWechatPayDisplayQrCode? = nil, wechatPayRedirectToAndroidApp: PaymentIntentNextActionWechatPayRedirectToAndroidApp? = nil, wechatPayRedirectToIosApp: PaymentIntentNextActionWechatPayRedirectToIosApp? = nil) {
        self.alipayHandleRedirect = alipayHandleRedirect
        self.boletoDisplayDetails = boletoDisplayDetails
        self.cardAwaitNotification = cardAwaitNotification
        self.displayBankTransferInstructions = displayBankTransferInstructions
        self.konbiniDisplayDetails = konbiniDisplayDetails
        self.oxxoDisplayDetails = oxxoDisplayDetails
        self.paynowDisplayQrCode = paynowDisplayQrCode
        self.promptpayDisplayQrCode = promptpayDisplayQrCode
        self.redirectToURL = redirectToURL
        self.type = type
        self.useStripeSdk = useStripeSdk
        self.verifyWithMicrodeposits = verifyWithMicrodeposits
        self.wechatPayDisplayQrCode = wechatPayDisplayQrCode
        self.wechatPayRedirectToAndroidApp = wechatPayRedirectToAndroidApp
        self.wechatPayRedirectToIosApp = wechatPayRedirectToIosApp
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.alipayHandleRedirect = try values.decodeIfPresent(PaymentIntentNextActionAlipayHandleRedirect.self, forKey: "alipay_handle_redirect")
        self.boletoDisplayDetails = try values.decodeIfPresent(PaymentIntentNextActionBoleto.self, forKey: "boleto_display_details")
        self.cardAwaitNotification = try values.decodeIfPresent(PaymentIntentNextActionCardAwaitNotification.self, forKey: "card_await_notification")
        self.displayBankTransferInstructions = try values.decodeIfPresent(PaymentIntentNextActionDisplayBankTransferInstructions.self, forKey: "display_bank_transfer_instructions")
        self.konbiniDisplayDetails = try values.decodeIfPresent(PaymentIntentNextActionKonbini.self, forKey: "konbini_display_details")
        self.oxxoDisplayDetails = try values.decodeIfPresent(PaymentIntentNextActionDisplayOxxoDetails.self, forKey: "oxxo_display_details")
        self.paynowDisplayQrCode = try values.decodeIfPresent(PaymentIntentNextActionPaynowDisplayQrCode.self, forKey: "paynow_display_qr_code")
        self.promptpayDisplayQrCode = try values.decodeIfPresent(PaymentIntentNextActionPromptpayDisplayQrCode.self, forKey: "promptpay_display_qr_code")
        self.redirectToURL = try values.decodeIfPresent(PaymentIntentNextActionRedirectToURL.self, forKey: "redirect_to_url")
        self.type = try values.decode(String.self, forKey: "type")
        self.useStripeSdk = try values.decodeIfPresent([String: AnyJSON].self, forKey: "use_stripe_sdk")
        self.verifyWithMicrodeposits = try values.decodeIfPresent(PaymentIntentNextActionVerifyWithMicrodeposits.self, forKey: "verify_with_microdeposits")
        self.wechatPayDisplayQrCode = try values.decodeIfPresent(PaymentIntentNextActionWechatPayDisplayQrCode.self, forKey: "wechat_pay_display_qr_code")
        self.wechatPayRedirectToAndroidApp = try values.decodeIfPresent(PaymentIntentNextActionWechatPayRedirectToAndroidApp.self, forKey: "wechat_pay_redirect_to_android_app")
        self.wechatPayRedirectToIosApp = try values.decodeIfPresent(PaymentIntentNextActionWechatPayRedirectToIosApp.self, forKey: "wechat_pay_redirect_to_ios_app")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(alipayHandleRedirect, forKey: "alipay_handle_redirect")
        try values.encodeIfPresent(boletoDisplayDetails, forKey: "boleto_display_details")
        try values.encodeIfPresent(cardAwaitNotification, forKey: "card_await_notification")
        try values.encodeIfPresent(displayBankTransferInstructions, forKey: "display_bank_transfer_instructions")
        try values.encodeIfPresent(konbiniDisplayDetails, forKey: "konbini_display_details")
        try values.encodeIfPresent(oxxoDisplayDetails, forKey: "oxxo_display_details")
        try values.encodeIfPresent(paynowDisplayQrCode, forKey: "paynow_display_qr_code")
        try values.encodeIfPresent(promptpayDisplayQrCode, forKey: "promptpay_display_qr_code")
        try values.encodeIfPresent(redirectToURL, forKey: "redirect_to_url")
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(useStripeSdk, forKey: "use_stripe_sdk")
        try values.encodeIfPresent(verifyWithMicrodeposits, forKey: "verify_with_microdeposits")
        try values.encodeIfPresent(wechatPayDisplayQrCode, forKey: "wechat_pay_display_qr_code")
        try values.encodeIfPresent(wechatPayRedirectToAndroidApp, forKey: "wechat_pay_redirect_to_android_app")
        try values.encodeIfPresent(wechatPayRedirectToIosApp, forKey: "wechat_pay_redirect_to_ios_app")
    }
}
