// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct IssuingAuthorizationVerificationData: Codable {
    /// Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.
    public var addressLine1Check: AddressLine1Check
    /// Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.
    public var addressPostalCodeCheck: AddressPostalCodeCheck
    /// Whether the cardholder provided a CVC and if it matched Stripe’s record.
    public var cvcCheck: CvcCheck
    /// Whether the cardholder provided an expiry date and if it matched Stripe’s record.
    public var expiryCheck: ExpiryCheck

    /// Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.
    public enum AddressLine1Check: String, Codable, CaseIterable {
        case match
        case mismatch
        case notProvided = "not_provided"
    }

    /// Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.
    public enum AddressPostalCodeCheck: String, Codable, CaseIterable {
        case match
        case mismatch
        case notProvided = "not_provided"
    }

    /// Whether the cardholder provided a CVC and if it matched Stripe’s record.
    public enum CvcCheck: String, Codable, CaseIterable {
        case match
        case mismatch
        case notProvided = "not_provided"
    }

    /// Whether the cardholder provided an expiry date and if it matched Stripe’s record.
    public enum ExpiryCheck: String, Codable, CaseIterable {
        case match
        case mismatch
        case notProvided = "not_provided"
    }

    public init(addressLine1Check: AddressLine1Check, addressPostalCodeCheck: AddressPostalCodeCheck, cvcCheck: CvcCheck, expiryCheck: ExpiryCheck) {
        self.addressLine1Check = addressLine1Check
        self.addressPostalCodeCheck = addressPostalCodeCheck
        self.cvcCheck = cvcCheck
        self.expiryCheck = expiryCheck
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.addressLine1Check = try values.decode(AddressLine1Check.self, forKey: "address_line1_check")
        self.addressPostalCodeCheck = try values.decode(AddressPostalCodeCheck.self, forKey: "address_postal_code_check")
        self.cvcCheck = try values.decode(CvcCheck.self, forKey: "cvc_check")
        self.expiryCheck = try values.decode(ExpiryCheck.self, forKey: "expiry_check")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(addressLine1Check, forKey: "address_line1_check")
        try values.encode(addressPostalCodeCheck, forKey: "address_postal_code_check")
        try values.encode(cvcCheck, forKey: "cvc_check")
        try values.encode(expiryCheck, forKey: "expiry_check")
    }
}
