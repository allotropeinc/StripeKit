// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SourceTransactionChfCreditTransferData: Codable {
    /// Reference associated with the transfer.
    public var reference: String?
    /// Sender's country address.
    public var senderAddressCountry: String?
    /// Sender's line 1 address.
    public var senderAddressLine1: String?
    /// Sender's bank account IBAN.
    public var senderIban: String?
    /// Sender's name.
    public var senderName: String?

    public init(reference: String? = nil, senderAddressCountry: String? = nil, senderAddressLine1: String? = nil, senderIban: String? = nil, senderName: String? = nil) {
        self.reference = reference
        self.senderAddressCountry = senderAddressCountry
        self.senderAddressLine1 = senderAddressLine1
        self.senderIban = senderIban
        self.senderName = senderName
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.reference = try values.decodeIfPresent(String.self, forKey: "reference")
        self.senderAddressCountry = try values.decodeIfPresent(String.self, forKey: "sender_address_country")
        self.senderAddressLine1 = try values.decodeIfPresent(String.self, forKey: "sender_address_line1")
        self.senderIban = try values.decodeIfPresent(String.self, forKey: "sender_iban")
        self.senderName = try values.decodeIfPresent(String.self, forKey: "sender_name")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(reference, forKey: "reference")
        try values.encodeIfPresent(senderAddressCountry, forKey: "sender_address_country")
        try values.encodeIfPresent(senderAddressLine1, forKey: "sender_address_line1")
        try values.encodeIfPresent(senderIban, forKey: "sender_iban")
        try values.encodeIfPresent(senderName, forKey: "sender_name")
    }
}
