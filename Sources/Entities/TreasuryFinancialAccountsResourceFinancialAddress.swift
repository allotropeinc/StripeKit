// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// FinancialAddresses contain identifying information that resolves to a FinancialAccount.
public struct TreasuryFinancialAccountsResourceFinancialAddress: Codable {
    /// TreasuryFinancialAccountsResourceABARecord
    ///
    /// ABA Records contain U.S. bank account details per the ABA format.
    public var aba: TreasuryFinancialAccountsResourceAbaRecord?
    /// The list of networks that the address supports
    public var supportedNetworks: [SupportedNetwork]?
    /// The type of financial address
    public var type: `Type`

    public enum SupportedNetwork: String, Codable, CaseIterable {
        case ach
        case usDomesticWire = "us_domestic_wire"
    }

    /// The type of financial address
    public enum `Type`: String, Codable, CaseIterable {
        case aba
    }

    public init(aba: TreasuryFinancialAccountsResourceAbaRecord? = nil, supportedNetworks: [SupportedNetwork]? = nil, type: `Type`) {
        self.aba = aba
        self.supportedNetworks = supportedNetworks
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.aba = try values.decodeIfPresent(TreasuryFinancialAccountsResourceAbaRecord.self, forKey: "aba")
        self.supportedNetworks = try values.decodeIfPresent([SupportedNetwork].self, forKey: "supported_networks")
        self.type = try values.decode(`Type`.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(aba, forKey: "aba")
        try values.encodeIfPresent(supportedNetworks, forKey: "supported_networks")
        try values.encode(type, forKey: "type")
    }
}
