// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct PaymentLinksResourceAfterCompletion: Codable {
    /// PaymentLinksResourceCompletionBehaviorConfirmationPage
    public var hostedConfirmation: PaymentLinksResourceCompletionBehaviorConfirmationPage?
    /// PaymentLinksResourceCompletionBehaviorRedirect
    public var redirect: PaymentLinksResourceCompletionBehaviorRedirect?
    /// The specified behavior after the purchase is complete.
    public var type: `Type`

    /// The specified behavior after the purchase is complete.
    public enum `Type`: String, Codable, CaseIterable {
        case hostedConfirmation = "hosted_confirmation"
        case redirect
    }

    public init(hostedConfirmation: PaymentLinksResourceCompletionBehaviorConfirmationPage? = nil, redirect: PaymentLinksResourceCompletionBehaviorRedirect? = nil, type: `Type`) {
        self.hostedConfirmation = hostedConfirmation
        self.redirect = redirect
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.hostedConfirmation = try values.decodeIfPresent(PaymentLinksResourceCompletionBehaviorConfirmationPage.self, forKey: "hosted_confirmation")
        self.redirect = try values.decodeIfPresent(PaymentLinksResourceCompletionBehaviorRedirect.self, forKey: "redirect")
        self.type = try values.decode(`Type`.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(hostedConfirmation, forKey: "hosted_confirmation")
        try values.encodeIfPresent(redirect, forKey: "redirect")
        try values.encode(type, forKey: "type")
    }
}
